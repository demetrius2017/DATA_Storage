version: '3.8'

services:
  # OrderBook Data Collector (our main application)
  collector:
    image: "ghcr.io/demetrius2017/data_storage/orderbook-collector:${IMAGE_TAG:-latest}"
    container_name: orderbook_collector
    environment:
      # External Digital Ocean Database connection
      DATABASE_URL: ${DATABASE_URL}

      # Binance API (optional, public endpoints don't need keys)
      BINANCE_API_KEY: ${BINANCE_API_KEY:-}
      BINANCE_SECRET_KEY: ${BINANCE_SECRET_KEY:-}
      # Force Futures endpoints (REST/WS)
      BINANCE_BASE_URL: ${BINANCE_BASE_URL:-https://fapi.binance.com}
      BINANCE_WS_URL: ${BINANCE_WS_URL:-wss://fstream.binance.com/ws/}

      # Application settings
      LOG_LEVEL: "INFO"
      ENVIRONMENT: "production"

      # Monitoring
      ENABLE_MONITORING: "true"
      MONITORING_PORT: "8000"

      # Collection settings
      BATCH_SIZE: "500"
      FLUSH_INTERVAL: "30"
      MAX_RETRIES: "5"

      # Depth stream (optional)
      ENABLE_DEPTH: ${ENABLE_DEPTH:-true}
      DEPTH_TOP_SYMBOLS: ${DEPTH_TOP_SYMBOLS:-BTCUSDT,ETHUSDT,SOLUSDT,BNBUSDT,XRPUSDT,AVAXUSDT,MATICUSDT,LINKUSDT,ADAUSDT,DOTUSDT}

      # Market Maker Analysis Focus
      SYMBOLS_CONFIG: "mm_focused"
      TOTAL_SYMBOLS: "200"
      SHARDS: "5"
    ports:
      - "8000:8000"  # Monitoring dashboard
    volumes:
      - collector_logs:/app/logs
      - collector_data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python3", "-c", "import requests; requests.get('http://localhost:8000/health', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - orderbook_network

  # Redis for caching and rate limiting (optional but recommended)
  redis:
    image: redis:7-alpine
    container_name: orderbook_redis
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - orderbook_network

volumes:
  redis_data:
    driver: local
  collector_logs:
    driver: local
  collector_data:
    driver: local

networks:
  orderbook_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
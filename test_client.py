#!/usr/bin/env python3
"""–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ –∫–æ–ª–ª–µ–∫—Ç–æ—Ä–∞"""

import sys
import json
from datetime import datetime

def test_imports():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤...")
    
    try:
        import requests
        print("  ‚úÖ requests")
    except ImportError as e:
        print(f"  ‚ùå requests: {e}")
        return False
    
    try:
        import websockets
        print("  ‚úÖ websockets")
    except ImportError as e:
        print(f"  ‚ùå websockets: {e}")
        return False
    
    try:
        import asyncio
        print("  ‚úÖ asyncio")
    except ImportError as e:
        print(f"  ‚ùå asyncio: {e}")
        return False
    
    try:
        from dataclasses import dataclass
        print("  ‚úÖ dataclasses")
    except ImportError as e:
        print(f"  ‚ùå dataclasses: {e}")
        return False
    
    return True

def test_client_functionality():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –∫–ª–∏–µ–Ω—Ç–∞"""
    print("\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –∫–ª–∏–µ–Ω—Ç–∞...")
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à –∫–ª–∏–µ–Ω—Ç
        sys.path.append('scripts')
        from remote_collector_client import RemoteCollectorClient, CollectorStatus
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç
        client = RemoteCollectorClient("http://localhost:8000")
        print("  ‚úÖ –ö–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å
        status = CollectorStatus(
            is_running=True,
            symbols=["BTCUSDT", "ETHUSDT"],
            start_time=datetime.now().isoformat(),
            uptime_seconds=3600,
            error=None
        )
        print("  ‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞—é—Ç")
        
        return True
        
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ö–õ–ò–ï–ù–¢–ê –£–î–ê–õ–ï–ù–ù–û–ì–û –ö–û–õ–õ–ï–ö–¢–û–†–ê")
    print("=" * 50)
    
    success = True
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç—ã
    if not test_imports():
        success = False
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
    if not test_client_functionality():
        success = False
    
    print("\n" + "=" * 50)
    if success:
        print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        print("\nüí° –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ .env.example –≤ .env –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã")
        print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ: ./scripts/deploy_remote_collector.sh SERVER_IP")
        print("3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–ª–∏–µ–Ω—Ç: python scripts/remote_collector_client.py --help")
    else:
        print("‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π.")
        sys.exit(1)

if __name__ == "__main__":
    main()

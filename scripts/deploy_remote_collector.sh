#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –∫–æ–ª–ª–µ–∫—Ç–æ—Ä–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./deploy_remote_collector.sh [server_ip] [user]

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
SERVER_IP="${1:-YOUR_SERVER_IP}"
SERVER_USER="${2:-root}" 
PROJECT_NAME="data_collector"
REMOTE_PATH="/opt/$PROJECT_NAME"
DB_URL="${DATABASE_URL:-postgresql://user:password@host:port/database}"

echo "üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∫–æ–ª–ª–µ–∫—Ç–æ—Ä–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ"
echo "=================================================="
echo "–°–µ—Ä–≤–µ—Ä: $SERVER_USER@$SERVER_IP"
echo "–ü—É—Ç—å: $REMOTE_PATH"
echo ""

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É
log "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É..."
if ! ssh -o ConnectTimeout=10 "$SERVER_USER@$SERVER_IP" "echo '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ'"; then
    echo "‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É $SERVER_IP"
    exit 1
fi

# –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
log "üì¶ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ñ–∞–π–ª–æ–≤..."
TEMP_DIR=$(mktemp -d)
trap "rm -rf $TEMP_DIR" EXIT

# –ö–æ–ø–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã
cp -r collector/ "$TEMP_DIR/"
cp requirements.txt "$TEMP_DIR/" 2>/dev/null || echo "requirements.txt –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º..."

# –°–æ–∑–¥–∞–µ–º requirements.txt –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
cat > "$TEMP_DIR/requirements.txt" << EOF
asyncpg>=0.29.0
websockets>=12.0
numpy>=1.24.0
pandas>=2.0.0
fastapi>=0.104.0
uvicorn[standard]>=0.24.0
psutil>=5.9.0
python-multipart>=0.0.6
websocket-client>=1.6.0
EOF

# –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
mkdir -p "$TEMP_DIR/config"

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è systemd —Å–µ—Ä–≤–∏—Å–∞
cat > "$TEMP_DIR/config/collector.service" << EOF
[Unit]
Description=Market Data Collector
After=network.target
Wants=network.target

[Service]
Type=simple
User=collector
Group=collector
WorkingDirectory=$REMOTE_PATH
Environment=PYTHONPATH=$REMOTE_PATH
Environment=DATABASE_URL=$DB_URL
ExecStart=$REMOTE_PATH/venv/bin/python $REMOTE_PATH/collector/ingestion/enhanced_multi_stream_collector.py
Restart=always
RestartSec=10
StandardOutput=syslog
StandardError=syslog
SyslogIdentifier=collector

[Install]
WantedBy=multi-user.target
EOF

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è systemd –¥–ª—è API
cat > "$TEMP_DIR/config/collector-api.service" << EOF
[Unit]
Description=Collector Management API
After=network.target
Wants=network.target

[Service]
Type=simple
User=collector
Group=collector
WorkingDirectory=$REMOTE_PATH
Environment=PYTHONPATH=$REMOTE_PATH
Environment=DATABASE_URL=$DB_URL
ExecStart=$REMOTE_PATH/venv/bin/python $REMOTE_PATH/collector/management/collector_api.py
Restart=always
RestartSec=5
StandardOutput=syslog
StandardError=syslog
SyslogIdentifier=collector-api

[Install]
WantedBy=multi-user.target
EOF

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è nginx
cat > "$TEMP_DIR/config/nginx_collector.conf" << EOF
server {
    listen 80;
    server_name _;
    
    # API –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ
    location /api/ {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }
    
    # WebSocket –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ
    location /ws/ {
        proxy_pass http://127.0.0.1:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }
    
    # Dashboard
    location / {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }
}
EOF

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
cat > "$TEMP_DIR/deploy.sh" << 'EOF'
#!/bin/bash
set -e

REMOTE_PATH="/opt/data_collector"
DB_URL="$DATABASE_URL"

echo "üèóÔ∏è –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."

# –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É
echo "üì¶ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã..."
apt update && apt upgrade -y

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã
echo "üìã –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
apt install -y python3 python3-pip python3-venv nginx supervisor htop curl git

# –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∫–æ–ª–ª–µ–∫—Ç–æ—Ä–∞
if ! id "collector" &>/dev/null; then
    echo "üë§ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è collector..."
    useradd -r -s /bin/bash -d $REMOTE_PATH collector
fi

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
mkdir -p $REMOTE_PATH/{logs,data,config}
chown -R collector:collector $REMOTE_PATH

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
cd $REMOTE_PATH

# –°–æ–∑–¥–∞–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
echo "üêç –°–æ–∑–¥–∞–Ω–∏–µ Python –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
sudo -u collector python3 -m venv venv
sudo -u collector $REMOTE_PATH/venv/bin/pip install --upgrade pip

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo "üìö –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –ø–∞–∫–µ—Ç–æ–≤..."
sudo -u collector $REMOTE_PATH/venv/bin/pip install -r requirements.txt

# –ö–æ–ø–∏—Ä—É–µ–º systemd —Å–µ—Ä–≤–∏—Å—ã
echo "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ systemd —Å–µ—Ä–≤–∏—Å–æ–≤..."
cp config/collector.service /etc/systemd/system/
cp config/collector-api.service /etc/systemd/system/
systemctl daemon-reload

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º nginx
echo "üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ nginx..."
cp config/nginx_collector.conf /etc/nginx/sites-available/collector
ln -sf /etc/nginx/sites-available/collector /etc/nginx/sites-enabled/
rm -f /etc/nginx/sites-enabled/default
nginx -t && systemctl restart nginx

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º firewall
echo "üîí –ù–∞—Å—Ç—Ä–æ–π–∫–∞ firewall..."
ufw allow ssh
ufw allow http
ufw allow https
ufw --force enable

# –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
echo "‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
systemctl enable collector-api
systemctl start collector-api

echo "‚úÖ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo ""
echo "üéØ –î–æ—Å—Ç—É–ø–Ω—ã–µ endpoints:"
echo "   Dashboard: http://$(curl -s ifconfig.me)"
echo "   API: http://$(curl -s ifconfig.me)/api/collector/status"
echo ""
echo "üìã –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞–º–∏:"
echo "   systemctl status collector-api"
echo "   systemctl status collector"
echo "   journalctl -f -u collector-api"
echo ""
EOF

chmod +x "$TEMP_DIR/deploy.sh"

# –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
cat > "$TEMP_DIR/monitor.sh" << 'EOF'
#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∫–æ–ª–ª–µ–∫—Ç–æ—Ä–∞

check_service() {
    local service=$1
    if systemctl is-active --quiet $service; then
        echo "‚úÖ $service: –∑–∞–ø—É—â–µ–Ω"
    else
        echo "‚ùå $service: –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        systemctl status $service --no-pager -l
    fi
}

echo "üîç –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–æ–ª–ª–µ–∫—Ç–æ—Ä–∞ $(date)"
echo "=================================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä–≤–∏—Å—ã
check_service collector-api
check_service collector
check_service nginx

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
echo ""
echo "üóÑÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –ë–î..."
if /opt/data_collector/venv/bin/python -c "
import asyncpg
import asyncio

async def check():
    try:
        conn = await asyncpg.connect('$DATABASE_URL')
        result = await conn.fetchval('SELECT count(*) FROM book_ticker WHERE ts_exchange > now() - interval \'5 minutes\'')
        await conn.close()
        print(f'‚úÖ –ë–î –¥–æ—Å—Ç—É–ø–Ω–∞, —Å–≤–µ–∂–∏—Ö –∑–∞–ø–∏—Å–µ–π: {result}')
    except Exception as e:
        print(f'‚ùå –û—à–∏–±–∫–∞ –ë–î: {e}')

asyncio.run(check())
"; then
    :
else
    echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ë–î"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ
echo ""
echo "üíæ –ú–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ:"
df -h / | tail -1

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞–º—è—Ç—å
echo ""
echo "üß† –ü–∞–º—è—Ç—å:"
free -h

# –ü—Ä–æ–≤–µ—Ä—è–µ–º CPU
echo ""
echo "‚ö° CPU Load:"
uptime

# –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏
echo ""
echo "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ –∫–æ–ª–ª–µ–∫—Ç–æ—Ä–∞:"
journalctl -u collector --no-pager -n 5

echo ""
echo "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ API:"
journalctl -u collector-api --no-pager -n 5
EOF

chmod +x "$TEMP_DIR/monitor.sh"

# –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä
log "üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä..."
rsync -avz --progress "$TEMP_DIR/" "$SERVER_USER@$SERVER_IP:$REMOTE_PATH/"

# –í—ã–ø–æ–ª–Ω—è–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
log "üèóÔ∏è –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."
ssh "$SERVER_USER@$SERVER_IP" "cd $REMOTE_PATH && bash deploy.sh"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
log "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
ssh "$SERVER_USER@$SERVER_IP" "cd $REMOTE_PATH && bash monitor.sh"

# –ü–æ–ª—É—á–∞–µ–º IP —Å–µ—Ä–≤–µ—Ä–∞
SERVER_PUBLIC_IP=$(ssh "$SERVER_USER@$SERVER_IP" "curl -s ifconfig.me" 2>/dev/null || echo "$SERVER_IP")

log "‚úÖ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
echo ""
echo "üéØ –ö–æ–ª–ª–µ–∫—Ç–æ—Ä —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç –∏ –¥–æ—Å—Ç—É–ø–µ–Ω:"
echo "   Dashboard: http://$SERVER_PUBLIC_IP"
echo "   API Status: http://$SERVER_PUBLIC_IP/api/collector/status"
echo "   WebSocket: ws://$SERVER_PUBLIC_IP/ws/monitoring"
echo ""
echo "üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:"
echo "   ssh $SERVER_USER@$SERVER_IP 'systemctl status collector-api'"
echo "   ssh $SERVER_USER@$SERVER_IP 'journalctl -f -u collector'"
echo "   ssh $SERVER_USER@$SERVER_IP 'cd $REMOTE_PATH && bash monitor.sh'"
echo ""
echo "üîß –î–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö:"
echo "   curl -X POST http://$SERVER_PUBLIC_IP/api/collector/start \\"
echo "        -H 'Content-Type: application/json' \\"
echo "        -d '{\"symbols\":[\"BTCUSDT\",\"ETHUSDT\",\"SOLUSDT\"], \"database_url\":\"$DB_URL\", \"log_level\":\"INFO\"}'"
echo ""